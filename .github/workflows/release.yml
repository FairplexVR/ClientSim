name: Build Release

on:
  workflow_dispatch:
  push:
    branches: main
    paths: Packages/com.vrchat.ClientSim/**

env:
  packageName: "com.vrchat.ClientSim"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout
        uses: actions/checkout@v3

      - name: Delete Tests
        run: |
          rm -rf "Packages/${{env.packageName}}/Tests"
          rm -rf "Packages/${{env.packageName}}/Tests.meta"

      - name: get version
        id: version
        uses: notiz-dev/github-action-json-property@7c8cf5cc36eb85d8d287a8086a39dac59628eb31
        with:
          path: "Packages/${{env.packageName}}/package.json"
          prop_path: "version"

      - name: Set Environment Variables
        run: |
          echo "zipFile=${{ env.packageName }}-${{ steps.version.outputs.prop }}".zip >> $GITHUB_ENV
          echo "unityPackage=${{ env.packageName }}-${{ steps.version.outputs.prop }}.unitypackage" >> $GITHUB_ENV
          echo "workspace=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Create Zip
        uses: thedoctor0/zip-release@09336613be18a8208dfa66bd57efafd9e2685657
        with:
          type: "zip"
          directory: "Packages/${{env.packageName}}/"
          filename: "../../${{env.zipFile}}" # make the zip file two directories up, since we start two directories in above

      - uses: actions/checkout@v3 # check out automation repo
        with:
          repository: vrchat-community/package-list-action
          path: ${{env.pathToCi}}
          clean: false # otherwise the local repo will no longer be checked out
          ref: feature/export-unitypackages
          
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: |
            ${{env.pathToCi}}/.nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
          
      - name: Create UnityPackage
        run: ${{env.pathToCi}}/build.cmd BuildUnityPackage
        env:
          root: ${{env.pathToCi}}
          unityPackageExportSource: ${{env.workspace}}
          unityPackageExportOutput: ${{env.unityPackage}}
          assetPattern: "Packages/${{env.packageName}}/**/*.*"

      - name: Make Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5
        with:
          tag_name: ${{ steps.version.outputs.prop }}
          files: |
            ${{ env.zipFile }}
            ${{ env.unityPackage }}
            Packages/${{ env.packageName }}/package.json